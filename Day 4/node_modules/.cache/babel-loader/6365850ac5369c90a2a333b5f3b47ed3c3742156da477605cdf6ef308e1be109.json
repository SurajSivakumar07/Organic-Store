{"ast":null,"code":"var _jsxFileName = \"/Users/surajs/organicstore/organix/src/components/Fruits/DisplayFruits.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { data } from \"./FruitsData\";\nimport \"./fruits.css\";\nimport { UserContext } from \"../Context\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DisplayFruits() {\n  _s();\n  const {\n    name,\n    setName,\n    search\n  } = useContext(UserContext);\n  const navigation = useNavigate();\n  const [val, setVal] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/\").then(response => response.json()).then(data => setVal([data]));\n  }, []);\n  console.log(data[0]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"displayTitle\",\n        children: \"Best Selling Fruits in Coimbatore!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"displayFruits\",\n        children: data.filter(items => {\n          if (search === \"\") return items;else if (items.name.toLowerCase().includes(search.toLowerCase())) {\n            return items;\n          }\n        }).map(items => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"displayImageWrap\",\n            onClick: () => {\n              navigation(\"/fruits/\" + items.toLowerCase());\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: items.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dipslay-image-text\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: items.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)]\n          }, items.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(DisplayFruits, \"q3c8+Uqpy1uilK2Wk1MB6zmfIcc=\", false, function () {\n  return [useNavigate];\n});\n_c = DisplayFruits;\nvar _c;\n$RefreshReg$(_c, \"DisplayFruits\");","map":{"version":3,"names":["React","useContext","useEffect","useState","data","UserContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","DisplayFruits","_s","name","setName","search","navigation","val","setVal","fetch","then","response","json","console","log","children","className","id","fileName","_jsxFileName","lineNumber","columnNumber","filter","items","toLowerCase","includes","map","onClick","src","img","_c","$RefreshReg$"],"sources":["/Users/surajs/organicstore/organix/src/components/Fruits/DisplayFruits.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\n\nimport { data } from \"./FruitsData\";\n\nimport \"./fruits.css\";\nimport { UserContext } from \"../Context\";\nimport { useNavigate } from \"react-router\";\n\nexport default function DisplayFruits() {\n  const { name, setName, search } = useContext(UserContext);\n\n  const navigation = useNavigate();\n\n  const [val, setVal] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8080/\")\n      .then((response) => response.json())\n      .then((data) => setVal([data]));\n  }, []);\n\n  console.log(data[0]);\n\n  return (\n    <>\n      <div className=\"display-main\">\n        <h1 id=\"displayTitle\">Best Selling Fruits in Coimbatore!</h1>\n\n        <div className=\"displayFruits\">\n          {data\n            .filter((items) => {\n              if (search === \"\") return items;\n              else if (\n                items.name.toLowerCase().includes(search.toLowerCase())\n              ) {\n                return items;\n              }\n            })\n            .map((items) => (\n              <>\n                <div\n                  className=\"displayImageWrap\"\n                  key={items.id}\n                  onClick={() => {\n                    navigation(\"/fruits/\" + items.toLowerCase());\n                  }}\n                >\n                  <img src={items.img} />\n                  <div className=\"dipslay-image-text\">\n                    <h1>{items.name}</h1>\n                  </div>\n                </div>\n              </>\n            ))}\n        </div>\n\n        {/* {data[0].map((items) => (\n          <>\n            <div\n              className=\"displayImageWrap\"\n              key={items.id}\n              onClick={() => {\n                navigation(\"/fruits/\" + items.name.toLowerCase());\n              }}\n            >\n              <img src={items.img} />\n              <div className=\"dipslay-image-text\">\n                <h1>{items.name}</h1>\n              </div>\n            </div>\n          </>\n        ))} */}\n      </div>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}