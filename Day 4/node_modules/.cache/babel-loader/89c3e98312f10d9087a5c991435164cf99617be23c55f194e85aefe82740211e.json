{"ast":null,"code":"//intial state and action\n\nimport { ActionType } from \"../constant/Action-type\";\nconst initialState = {\n  product: [],\n  localStorage: []\n};\nexport const productReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ActionType.SET_PRODUCTS:\n      let val = {\n        ...state,\n        product: [...state.product, payload],\n        localStorage: [...state.localStorage, JSON.parse(localStorage.getItem(\"items\"))]\n      };\n      localStorage.setItem(\"items\", JSON.stringify(val.product));\n      state.localStorage = JSON.parse(localStorage.getItem(\"items\"));\n      val = {\n        ...state,\n        product: [...state.product, payload],\n        localStorage: [...state.localStorage, JSON.parse(localStorage.getItem(\"items\"))]\n      };\n      return val;\n    default:\n      return state;\n  }\n};\nconst initial = {\n  isLoggedIn: false\n};\nexport const isLoggedIn = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ActionType.CHECK_LOGIN:\n      return {\n        isLoggedIn: payload\n      };\n    default:\n      return state;\n  }\n};\nconst displayIntital = {\n  prod: []\n};\nexport const displayFruits = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : displayIntital;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ActionType.DISPLAY_FRUITS:\n      return {\n        ...state,\n        prod: payload\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionType","initialState","product","localStorage","productReducer","state","arguments","length","undefined","type","payload","SET_PRODUCTS","val","JSON","parse","getItem","setItem","stringify","initial","isLoggedIn","CHECK_LOGIN","displayIntital","prod","displayFruits","DISPLAY_FRUITS"],"sources":["/Users/surajs/organicstore/organix/src/Redux/reducer/Product_reducer.js"],"sourcesContent":["//intial state and action\n\nimport { ActionType } from \"../constant/Action-type\";\n\nconst initialState = {\n  product: [],\n  localStorage: [],\n};\n\nexport const productReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionType.SET_PRODUCTS:\n      let val = {\n        ...state,\n        product: [...state.product, payload],\n        localStorage: [\n          ...state.localStorage,\n          JSON.parse(localStorage.getItem(\"items\")),\n        ],\n      };\n      localStorage.setItem(\"items\", JSON.stringify(val.product));\n      state.localStorage = JSON.parse(localStorage.getItem(\"items\"));\n\n      val = {\n        ...state,\n        product: [...state.product, payload],\n        localStorage: [\n          ...state.localStorage,\n          JSON.parse(localStorage.getItem(\"items\")),\n        ],\n      };\n      return val;\n    default:\n      return state;\n  }\n};\n\nconst initial = {\n  isLoggedIn: false,\n};\nexport const isLoggedIn = (state = initial, { type, payload }) => {\n  switch (type) {\n    case ActionType.CHECK_LOGIN:\n      return { isLoggedIn: payload };\n    default:\n      return state;\n  }\n};\n\nconst displayIntital = {\n  prod: [],\n};\n\nexport const displayFruits = (state = displayIntital, { type, payload }) => {\n  switch (type) {\n    case ActionType.DISPLAY_FRUITS:\n      return { ...state, prod: payload };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA;;AAEA,SAASA,UAAU,QAAQ,yBAAyB;AAEpD,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,EAAE;EACXC,YAAY,EAAE;AAChB,CAAC;AAED,OAAO,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAA6C;EAAA,IAA5CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAE;IAAEQ,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpE,QAAQC,IAAI;IACV,KAAKT,UAAU,CAACW,YAAY;MAC1B,IAAIC,GAAG,GAAG;QACR,GAAGP,KAAK;QACRH,OAAO,EAAE,CAAC,GAAGG,KAAK,CAACH,OAAO,EAAEQ,OAAO,CAAC;QACpCP,YAAY,EAAE,CACZ,GAAGE,KAAK,CAACF,YAAY,EACrBU,IAAI,CAACC,KAAK,CAACX,YAAY,CAACY,OAAO,CAAC,OAAO,CAAC,CAAC;MAE7C,CAAC;MACDZ,YAAY,CAACa,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACI,SAAS,CAACL,GAAG,CAACV,OAAO,CAAC,CAAC;MAC1DG,KAAK,CAACF,YAAY,GAAGU,IAAI,CAACC,KAAK,CAACX,YAAY,CAACY,OAAO,CAAC,OAAO,CAAC,CAAC;MAE9DH,GAAG,GAAG;QACJ,GAAGP,KAAK;QACRH,OAAO,EAAE,CAAC,GAAGG,KAAK,CAACH,OAAO,EAAEQ,OAAO,CAAC;QACpCP,YAAY,EAAE,CACZ,GAAGE,KAAK,CAACF,YAAY,EACrBU,IAAI,CAACC,KAAK,CAACX,YAAY,CAACY,OAAO,CAAC,OAAO,CAAC,CAAC;MAE7C,CAAC;MACD,OAAOH,GAAG;IACZ;MACE,OAAOP,KAAK;EAChB;AACF,CAAC;AAED,MAAMa,OAAO,GAAG;EACdC,UAAU,EAAE;AACd,CAAC;AACD,OAAO,MAAMA,UAAU,GAAG,SAAAA,CAAA,EAAwC;EAAA,IAAvCd,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGY,OAAO;EAAA,IAAE;IAAET,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3D,QAAQC,IAAI;IACV,KAAKT,UAAU,CAACoB,WAAW;MACzB,OAAO;QAAED,UAAU,EAAET;MAAQ,CAAC;IAChC;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,MAAMgB,cAAc,GAAG;EACrBC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,SAAAA,CAAA,EAA+C;EAAA,IAA9ClB,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGe,cAAc;EAAA,IAAE;IAAEZ,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrE,QAAQC,IAAI;IACV,KAAKT,UAAU,CAACwB,cAAc;MAC5B,OAAO;QAAE,GAAGnB,KAAK;QAAEiB,IAAI,EAAEZ;MAAQ,CAAC;IACpC;MACE,OAAOL,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}