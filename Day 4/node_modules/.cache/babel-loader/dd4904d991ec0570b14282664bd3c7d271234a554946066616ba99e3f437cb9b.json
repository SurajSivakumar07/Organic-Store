{"ast":null,"code":"//intial state and action\n\nimport { ActionType } from \"../constant/Action-type\";\nconst initialState = {\n  product: []\n};\nexport const productReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ActionType.SET_PRODUCTS:\n      return {\n        ...state,\n        product: [...state.product, payload]\n      };\n    case ActionType.CHECK_LOGIN:\n      return {\n        isLoggedIn: true\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["ActionType","initialState","product","productReducer","state","arguments","length","undefined","type","payload","SET_PRODUCTS","CHECK_LOGIN","isLoggedIn"],"sources":["/Users/surajs/organicstore/organix/src/Redux/reducer/Product_reducer.js"],"sourcesContent":["//intial state and action\n\nimport { ActionType } from \"../constant/Action-type\";\n\nconst initialState = { product: [] };\n\nexport const productReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionType.SET_PRODUCTS:\n      return { ...state, product: [...state.product, payload] };\n    case ActionType.CHECK_LOGIN:\n      return { isLoggedIn: true };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA;;AAEA,SAASA,UAAU,QAAQ,yBAAyB;AAEpD,MAAMC,YAAY,GAAG;EAAEC,OAAO,EAAE;AAAG,CAAC;AAEpC,OAAO,MAAMC,cAAc,GAAG,SAAAA,CAAA,EAA6C;EAAA,IAA5CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,YAAY;EAAA,IAAE;IAAEO,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACpE,QAAQC,IAAI;IACV,KAAKR,UAAU,CAACU,YAAY;MAC1B,OAAO;QAAE,GAAGN,KAAK;QAAEF,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAO,EAAEO,OAAO;MAAE,CAAC;IAC3D,KAAKT,UAAU,CAACW,WAAW;MACzB,OAAO;QAAEC,UAAU,EAAE;MAAK,CAAC;IAC7B;MACE,OAAOR,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}